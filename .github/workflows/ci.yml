name: Rust CI

on:
  push:
    branches: [main]
    # paths: ["rust/**"]
  pull_request:
    branches: [main]
    # paths: ["rust/**"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: inngest_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:8
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: rust/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        working-directory: ./rust
        run: cargo fmt --all -- --check

      - name: Run clippy
        working-directory: ./rust
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Build
        working-directory: ./rust
        run: cargo build --workspace --verbose

      - name: Run tests
        working-directory: ./rust
        run: cargo test --workspace --verbose
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/inngest_test
          REDIS_URL: redis://localhost:6379

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        working-directory: ./rust
        run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: inngest_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:8
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Generate code coverage
        working-directory: ./rust
        run: cargo tarpaulin --workspace --verbose --xml
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/inngest_test
          REDIS_URL: redis://localhost:6379

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          file: ./rust/cobertura.xml
          flags: rust

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feat/rust'

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        working-directory: ./rust
        run: cargo build --workspace --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust-binaries
          path: rust/target/release/ingest-*
          retention-days: 7
